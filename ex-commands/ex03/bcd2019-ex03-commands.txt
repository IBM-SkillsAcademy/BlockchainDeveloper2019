=======
Part 1
=======     
docker rm -f $(docker ps -aq); docker volume rm -f $(docker volume ls -q)

docker ps -a

cd ~/BlockchainDeveloper2019/ex-commands/ex03/
./startEx03.sh

=======
Part 2
=======  

cd ~/BlockchainDeveloper2019/SampleApplication/contract/
npm install
code .

=======
Part 4
=======  

const result = await this.ctx.stub.getStateByRange(ledgerStartKey, ledgerEndKey);
const data = await this.ctx.stub.getStateByPartialCompositeKey(this.name, []);

=======
Part 5
=======

 const result = await this.ctx.stub.getQueryResultWithPagination(queryString, pageSize, bookmark);	
=======
Part 6
=======

cd ~/BlockchainDeveloper2019/SampleApplication/contract 
npm run-script build 
cd ~/BlockchainDeveloper2019/Vehicle-Network
./upgrade.sh 1.9.3
cd ~/BlockchainDeveloper2019/SampleApplication/application
set-title "Clients App"
./start.sh

http://localhost:6001/api-docs

./populateOrders.sh 
=======
Part 7 
=======
docker exec -ti cli bash 

peer chaincode query -C mychannel -n vehicle-manufacture -c '{"args":["getOrdersByStatus", "ISSUED"]}'
peer chaincode query -C mychannel -n vehicle-manufacture -c '{"args":["getOrdersByStatusPaginated", "ISSUED","5",""]}' 
peer chaincode query -C mychannel -n vehicle-manufacture -c '{"args":["getHistoryForOrder", "Order1"]}'
peer chaincode query -C mychannel -n vehicle-manufacture -c '{"args":["getOrdersByRange", "Order11","Order15"]}'

http://localhost:5984/_utils/ 


{
   "selector": {
      "orderStatus": "ISSUED"
   },
   "use_index": [
      "_design/orderStatusDoc ",
      "orderStatusIndex "
   ]
}


 curl -X POST "http://localhost:5984/mychannel_vehicle-manufacture/_find" -H  "accept: */*"  -H  "Content-Type: application/json" -d "{\"selector\":{\"orderStatus\":\"ISSUED\"},\"use_index\":[\"_design/orderStatusDoc\",\"orderStatusIndex\"],\"execution_stats\":true,\"limit\":2,\"skip\":0}"

